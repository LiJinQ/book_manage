<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ambow.dao.ReaderDao">
	<insert id="newReader" useGeneratedKeys="true" keyProperty="id">
		insert into reader(number,name,sex,entry_time,address,tel,identity)
		values
		(#{number},#{name},#{sex},#{entryTime},#{address},#{tel},#{identity})
	</insert>
	<update id="updateReader">
		UPDATE reader 
		<set>
			<if test="number!=null">number=#{number},</if>
			<if test="name!=null">name=#{name},</if>
			<if test="sex!=null">sex=#{sex},</if>
			<if test="entryTime!=null"> entry_time=#{entryTime},</if>
			<if test="address!=null">address=#{address},</if>
			<if test="tel!=null">tel=#{tel},</if>
			<if test="identity!=null">identity=#{identity},</if>
		</set>
		WHERE
		id=#{id}
	</update>
	<delete id="deleteReaderById">
		delete from reader 
		where
		id =#{id}
	</delete>
	<select id="getReaderById" resultType="Reader">
		select * from reader
		where 
		id = #{id}
	</select>
	<select id="getReaderByName" resultType="Reader">
		select * from reader 
		where
		name like #{name}
		order by id desc
	</select>
	<select id="getAllReader" resultType="Reader">
		select * from reader
		order by id desc
	</select>
	<select id="getReaderSearch" resultType="Reader">
		select * from reader where concat(number,name,sex,entry_time,address,tel,identity) like #{content}
		order by id desc
	</select>
	
	<select id="getTotalRecord" resultType="int">
		select count(*) from reader where 1=1
		<if test="name!=null">name=#{name}</if>
	</select>
	<select id="getTotalSearchRecord" resultType="int">
		select count(*) from reader where concat(number,name,sex,entry_time,address,tel,identity) like #{content}
	</select>
	<select id="getReaderPagerByName" resultType="Reader">
		select * from reader 
		where
		name like #{name}
		order by id desc
		limit #{pager.startIndex},#{pager.pageSize}
		
	</select>
	<select id="getAllReaderPager" resultType="Reader">
		select * from reader limit #{pager.startIndex},#{pager.pageSize}
		order by id desc
	</select>
	<select id="getReaderPagerSearch" resultType="Reader">
		select * from reader where concat(number,name,sex,entry_time,address,tel,identity) like #{content}
		order by id desc
		limit #{pager.startIndex},#{pager.pageSize}
		
	</select>
</mapper>